name: Python Application Delivery Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.2
      - name: Install dependencies
        run: |
          echo "Installing all required dependencies..."
          sudo pip3 install -r requirements.txt
          sudo npm install -g pm2

  deploy-to-dev:
    needs: install-pip-deps
    runs-on: self-hosted
    steps:
      - name: Checkout repository for deployment to dev
        uses: actions/checkout@v3.5.2
        with:
          path: python-greetings
      - name: Deploy to dev environment
        run: |
          echo "Deploying to development environment..."
          pm2 delete greetings-app-dev || true
          pm2 start app.py --name greetings-app-dev -- --port 7001
        working-directory: ./python-greetings

  tests-on-dev:
    needs: deploy-to-dev
    runs-on: self-hosted
    steps:
      - name: Checkout test framework
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on dev environment
        run: |
          echo "Running tests on development environment..."
          npm install
          npm run greetings greetings_dev
        working-directory: ./course-js-api-framework

  deploy-to-staging:
    needs: tests-on-dev
    runs-on: self-hosted
    steps:
      - name: Checkout repository for deployment to staging
        uses: actions/checkout@v3.5.2
        with:
          path: python-greetings
      - name: Deploy to staging environment
        run: |
          echo "Deploying to staging environment..."
          pm2 delete greetings-app-staging || true
          pm2 start app.py --name greetings-app-staging -- --port 7002
        working-directory: ./python-greetings

  tests-on-staging:
    needs: deploy-to-staging
    runs-on: self-hosted
    steps:
      - name: Checkout test framework for staging
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on staging environment
        run: |
          echo "Running tests on staging environment..."
          npm install
          npm run greetings greetings_staging
        working-directory: ./course-js-api-framework

  deploy-to-preprod:
    needs: tests-on-staging
    runs-on: self-hosted
    steps:
      - name: Checkout repository for deployment to preprod
        uses: actions/checkout@v3.5.2
        with:
          path: python-greetings
      - name: Deploy to preproduction environment
        run: |
          echo "Deploying to preproduction environment..."
          pm2 delete greetings-app-preprod || true
          pm2 start app.py --name greetings-app-preprod -- --port 7003
        working-directory: ./python-greetings

  tests-on-preprod:
    needs: deploy-to-preprod
    runs-on: self-hosted
    steps:
      - name: Checkout test framework for preprod
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          path: course-js-api-framework
      - name: Run tests on preprod environment
        run: |
          echo "Running tests on preproduction environment..."
          npm install
          npm run greetings greetings_preprod
        working-directory: ./course-js-api-framework

  deploy-to-prod:
    needs: tests-on-preprod
    runs-on: self-hosted
    steps:
      - name: Checkout repository for deployment to prod
        uses: actions/checkout@v3.5.2
        with:
          path: python-greetings
      - name: Deploy to production environment
        run: |
          echo "Deploying to production environment..."
          pm2 delete greetings-app-prod || true
          pm2 start app.py --name greetings-app-prod -- --port 7004
        working-directory: ./python-greetings

  tests-on-prod:
    needs: deploy-to-prod
    runs-on: self-hosted
    steps:
      - name: Checkout test framework for production
        uses: actions
